// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

package name.jchein.portfolio.services.paint.gateway.grpc;

/**
 * <pre>
 * All except PERCENT_DONE and ERROR use InformationUpdate body.
 * </pre>
 *
 * Protobuf enum {@code name.jchein.portfolio.services.paint.gateway.TaskStateType}
 */
public enum TaskStateType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>IN_PAINT_QUEUE = 0;</code>
   */
  IN_PAINT_QUEUE(0),
  /**
   * <code>IN_UPLOAD_QUEUE = 1;</code>
   */
  IN_UPLOAD_QUEUE(1),
  /**
   * <pre>
   * Uses PercentDoneUpdate body
   * </pre>
   *
   * <code>PAINT_PROGRESS = 2;</code>
   */
  PAINT_PROGRESS(2),
  /**
   * <code>UPLOADING = 3;</code>
   */
  UPLOADING(3),
  /**
   * <pre>
   * PAUSED = 4; Reserved value for future PAUSED state
   * SOFT_ERROR = 5;       // Reserved value for future RETRY message
   * </pre>
   *
   * <code>ERROR = 6;</code>
   */
  ERROR(6),
  /**
   * <code>FINISHED = 7;</code>
   */
  FINISHED(7),
  /**
   * <code>CANCELLED = 8;</code>
   */
  CANCELLED(8),
  /**
   * <pre>
   * Delete state -- User acknowledged error or cancellation
   * </pre>
   *
   * <code>DROPPED = 9;</code>
   */
  DROPPED(9),
  /**
   * <pre>
   * Delete state -- User acknowledged success
   * </pre>
   *
   * <code>CLOSED = 10;</code>
   */
  CLOSED(10),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>IN_PAINT_QUEUE = 0;</code>
   */
  public static final int IN_PAINT_QUEUE_VALUE = 0;
  /**
   * <code>IN_UPLOAD_QUEUE = 1;</code>
   */
  public static final int IN_UPLOAD_QUEUE_VALUE = 1;
  /**
   * <pre>
   * Uses PercentDoneUpdate body
   * </pre>
   *
   * <code>PAINT_PROGRESS = 2;</code>
   */
  public static final int PAINT_PROGRESS_VALUE = 2;
  /**
   * <code>UPLOADING = 3;</code>
   */
  public static final int UPLOADING_VALUE = 3;
  /**
   * <pre>
   * PAUSED = 4; Reserved value for future PAUSED state
   * SOFT_ERROR = 5;       // Reserved value for future RETRY message
   * </pre>
   *
   * <code>ERROR = 6;</code>
   */
  public static final int ERROR_VALUE = 6;
  /**
   * <code>FINISHED = 7;</code>
   */
  public static final int FINISHED_VALUE = 7;
  /**
   * <code>CANCELLED = 8;</code>
   */
  public static final int CANCELLED_VALUE = 8;
  /**
   * <pre>
   * Delete state -- User acknowledged error or cancellation
   * </pre>
   *
   * <code>DROPPED = 9;</code>
   */
  public static final int DROPPED_VALUE = 9;
  /**
   * <pre>
   * Delete state -- User acknowledged success
   * </pre>
   *
   * <code>CLOSED = 10;</code>
   */
  public static final int CLOSED_VALUE = 10;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TaskStateType valueOf(int value) {
    return forNumber(value);
  }

  public static TaskStateType forNumber(int value) {
    switch (value) {
      case 0: return IN_PAINT_QUEUE;
      case 1: return IN_UPLOAD_QUEUE;
      case 2: return PAINT_PROGRESS;
      case 3: return UPLOADING;
      case 6: return ERROR;
      case 7: return FINISHED;
      case 8: return CANCELLED;
      case 9: return DROPPED;
      case 10: return CLOSED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TaskStateType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TaskStateType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TaskStateType>() {
          public TaskStateType findValueByNumber(int number) {
            return TaskStateType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return name.jchein.portfolio.services.paint.gateway.grpc.PaintGatewayProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final TaskStateType[] VALUES = values();

  public static TaskStateType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TaskStateType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:name.jchein.portfolio.services.paint.gateway.TaskStateType)
}

